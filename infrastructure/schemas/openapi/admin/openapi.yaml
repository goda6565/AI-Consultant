openapi: 3.0.3
info:
  title: "AI-Consultant Admin API"
  description: "AI-Consultant Admin API"
  version: "1.0.0"

tags:
  - name: documents

paths:
  /api/documents/{documentId}:
    get:
      tags:
        - documents
      summary: "Get a document by document id"
      operationId: "GetDocument"
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/DocumentIdPathParameter"
      responses:
        "200":
          $ref: "#/components/responses/GetDocumentSuccess"
        "400":
          $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/Error"
        "403":
          $ref: "#/components/responses/Error"
        "404":
          $ref: "#/components/responses/Error"
        "500":
          $ref: "#/components/responses/Error"

    delete:
      tags:
        - documents
      summary: "Delete a document by document id"
      operationId: "DeleteDocument"
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/DocumentIdPathParameter"
      responses:
        "204":
          description: "No content delete successfully"
        "400":
          $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/Error"
        "403":
          $ref: "#/components/responses/Error"
        "404":
          $ref: "#/components/responses/Error"
        "500":
          $ref: "#/components/responses/Error"

  /api/documents:
    get:
      tags:
        - documents
      summary: "List documents"
      operationId: "ListDocuments"
      security:
        - BearerAuth: []
      responses:
        "200":
          $ref: "#/components/responses/ListDocumentsSuccess"
        "400":
          $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/Error"
        "403":
          $ref: "#/components/responses/Error"
        "500":
          $ref: "#/components/responses/Error"

    post:
      tags:
        - documents
      summary: "Create a document"
      operationId: "CreateDocument"
      security:
        - BearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/CreateDocument"
      responses:
        "201":
          $ref: "#/components/responses/CreateDocumentSuccess"
        "400":
          $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/Error"
        "403":
          $ref: "#/components/responses/Error"
        "409":
          $ref: "#/components/responses/Error"
        "500":
          $ref: "#/components/responses/Error"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    documentExtension:
      type: string
      enum:
        - pdf
        - markdown
        - csv

    documentStatus:
      type: string
      enum:
        - processing
        - done
        - failed

    syncStep:
      type: string
      enum:
        - pending
        - vector
        - done

    errorCode:
      type: integer
      enum:
        - 400
        - 401
        - 403
        - 404
        - 409
        - 500

    Document:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        documentExtension:
          $ref: "#/components/schemas/documentExtension"
        bucketName:
          type: string
        objectName:
          type: string
        documentStatus:
          $ref: "#/components/schemas/documentStatus"
        syncStep:
          $ref: "#/components/schemas/syncStep"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - title
        - documentExtension
        - bucketName
        - objectName
        - documentStatus
        - syncStep
        - createdAt
        - updatedAt

  parameters:
    DocumentIdPathParameter:
      name: documentId
      in: path
      required: true
      description: "Document ID"
      schema:
        type: string
        format: uuid

  requestBodies:
    CreateDocument:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              documentExtension:
                $ref: "#/components/schemas/documentExtension"
              data:
                type: string
                format: byte
                description: "File data in base64"
            required:
              - title
              - documentExtension
              - data
  
  responses:
    Error:
      description: "Error"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              code:
                $ref: "#/components/schemas/errorCode"
            required:
              - message
              - code
    
    CreateDocumentSuccess:
      description: "Create document response"
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                format: uuid
            required:
              - id

    GetDocumentSuccess:
      description: "Get document response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Document"

    ListDocumentsSuccess:
      description: "List documents response"
      content:
        application/json:
          schema:
            type: object
            properties:
              documents:
                type: array
                items:
                  $ref: "#/components/schemas/Document"
            required:
              - documents
