/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * AI-Consultant Admin API
 * AI-Consultant Admin API
 * OpenAPI spec version: 1.0.0
 */

import type { Key, SWRConfiguration } from "swr";
import useSwr from "swr";
import { adminApiClient } from "../../client";
import type { ErrorResponse, GetHearingMapSuccessResponse } from ".././model";

/**
 * @summary Get a hearing map by hearing id
 */
export const getHearingMap = (hearingId: string) => {
  return adminApiClient<GetHearingMapSuccessResponse>({
    url: `/api/hearing-maps/${hearingId}`,
    method: "GET",
  });
};

export const getGetHearingMapKey = (hearingId: string) =>
  [`/api/hearing-maps/${hearingId}`] as const;

export type GetHearingMapQueryResult = NonNullable<
  Awaited<ReturnType<typeof getHearingMap>>
>;
export type GetHearingMapQueryError =
  | ErrorResponse
  | ErrorResponse
  | ErrorResponse
  | ErrorResponse
  | ErrorResponse;

/**
 * @summary Get a hearing map by hearing id
 */
export const useGetHearingMap = <
  TError =
    | ErrorResponse
    | ErrorResponse
    | ErrorResponse
    | ErrorResponse
    | ErrorResponse,
>(
  hearingId: string,
  options?: {
    swr?: SWRConfiguration<
      Awaited<ReturnType<typeof getHearingMap>>,
      TError
    > & { swrKey?: Key; enabled?: boolean };
  },
) => {
  const { swr: swrOptions } = options ?? {};

  const isEnabled = swrOptions?.enabled !== false && !!hearingId;
  const swrKey =
    swrOptions?.swrKey ??
    (() => (isEnabled ? getGetHearingMapKey(hearingId) : null));
  const swrFn = () => getHearingMap(hearingId);

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
    swrKey,
    swrFn,
    swrOptions,
  );

  return {
    swrKey,
    ...query,
  };
};
