/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * AI-Consultant Admin API
 * AI-Consultant Admin API
 * OpenAPI spec version: 1.0.0
 */

import type { Key, SWRConfiguration } from "swr";
import useSwr from "swr";
import { adminApiClient } from "../../client";
import type {
  ErrorResponse,
  ListHearingMessagesSuccessResponse,
} from ".././model";

/**
 * @summary List hearing messages by hearing id
 */
export const listHearingMessages = (hearingId: string) => {
  return adminApiClient<ListHearingMessagesSuccessResponse>({
    url: `/api/hearings/${hearingId}/messages`,
    method: "GET",
  });
};

export const getListHearingMessagesKey = (hearingId: string) =>
  [`/api/hearings/${hearingId}/messages`] as const;

export type ListHearingMessagesQueryResult = NonNullable<
  Awaited<ReturnType<typeof listHearingMessages>>
>;
export type ListHearingMessagesQueryError =
  | ErrorResponse
  | ErrorResponse
  | ErrorResponse
  | ErrorResponse
  | ErrorResponse;

/**
 * @summary List hearing messages by hearing id
 */
export const useListHearingMessages = <
  TError =
    | ErrorResponse
    | ErrorResponse
    | ErrorResponse
    | ErrorResponse
    | ErrorResponse,
>(
  hearingId: string,
  options?: {
    swr?: SWRConfiguration<
      Awaited<ReturnType<typeof listHearingMessages>>,
      TError
    > & { swrKey?: Key; enabled?: boolean };
  },
) => {
  const { swr: swrOptions } = options ?? {};

  const isEnabled = swrOptions?.enabled !== false && !!hearingId;
  const swrKey =
    swrOptions?.swrKey ??
    (() => (isEnabled ? getListHearingMessagesKey(hearingId) : null));
  const swrFn = () => listHearingMessages(hearingId);

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
    swrKey,
    swrFn,
    swrOptions,
  );

  return {
    swrKey,
    ...query,
  };
};
