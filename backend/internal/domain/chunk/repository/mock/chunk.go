// Code generated by MockGen. DO NOT EDIT.
// Source: chunk.go
//
// Generated by this command:
//
//	mockgen -source=chunk.go -destination=mock/chunk.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	entity "github.com/goda6565/ai-consultant/backend/internal/domain/chunk/entity"
	value "github.com/goda6565/ai-consultant/backend/internal/domain/shared/value"
	gomock "go.uber.org/mock/gomock"
)

// MockChunkRepository is a mock of ChunkRepository interface.
type MockChunkRepository struct {
	ctrl     *gomock.Controller
	recorder *MockChunkRepositoryMockRecorder
	isgomock struct{}
}

// MockChunkRepositoryMockRecorder is the mock recorder for MockChunkRepository.
type MockChunkRepositoryMockRecorder struct {
	mock *MockChunkRepository
}

// NewMockChunkRepository creates a new mock instance.
func NewMockChunkRepository(ctrl *gomock.Controller) *MockChunkRepository {
	mock := &MockChunkRepository{ctrl: ctrl}
	mock.recorder = &MockChunkRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChunkRepository) EXPECT() *MockChunkRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockChunkRepository) Create(ctx context.Context, chunk *entity.Chunk) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, chunk)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockChunkRepositoryMockRecorder) Create(ctx, chunk any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockChunkRepository)(nil).Create), ctx, chunk)
}

// Delete mocks base method.
func (m *MockChunkRepository) Delete(ctx context.Context, documentID value.ID) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, documentID)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockChunkRepositoryMockRecorder) Delete(ctx, documentID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockChunkRepository)(nil).Delete), ctx, documentID)
}
